/* Basic style reset */

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Declaración de Variables */

:root {
  --color-main: #E3FEF7;
  --color-secondary: #003C43;
  --color-tertiary: #135D66;
  --color-highlight: #77B0AA;


  --color-font-main: black;
  --color-font-seco: white;
}

/* Estilo básico de los elementos html y body */

html {
  font-size: 62.5%;
  scroll-behavior: smooth;
}

body {
  font-family: 'Roboto', Arial, Helvetica, sans-serif;
  min-height: 100vh;
  background-color: var(--color-main);
}

/* Clases de Utilidad */

.flex {
  display: flex;
}

.centered {
  justify-content: center;
  align-items: center;
}

/* Clase grid para establecer el layout */

.grid {
  display: grid;
  grid-template-columns: repeat(4, 25%);
  grid-template-rows: 25rem 6rem 35rem 35rem 6rem;
  grid-template-areas:
    "header header header header"
    "nav nav nav nav"
    "trans trans cssAnim cssAnim"
    "canvas canvas svgAnim svgAnim"
    "footer footer footer footer";
}

/* Elementos principales del layout */


.header {
  grid-area: header;
  background-color: var(--color-tertiary);
}

.nav {
  position: sticky;
  grid-area: nav;
  padding: 2rem;
  background-color: var(--color-highlight);
}

.trans,
.cssAnim,
.canvas,
.svgAnim {
  overflow: hidden;
  padding: 3rem 0;
  border: 0.1rem solid rgba(0, 0, 0, 0.3);
}

.trans {
  grid-area: trans;
  justify-content: space-between;
  background-color: var(--color-main);
}

.cssAnim {
  grid-area: cssAnim;
  flex-direction: column;
  background-color: var(--color-main);
}

.canvas {
  grid-area: canvas;
  background-color: var(--color-main);
}

.svgAnim {
  grid-area: svgAnim;
  background-color: var(--color-main);
}

.footer {
  grid-area: footer;
  background-color: var(--color-tertiary);
}

/* Elementos secundarios del layout */

/* Cabecera */

.header__title {
  font-family: 'Roboto Slab', serif;
  font-size: 5rem;
  font-weight: bold;
  width: 20%;
  color: var(--color-font-seco);
}

.header__photo {
  width: 17rem;
  border-radius: 1rem;
  margin: 2rem;
  box-shadow: 0 0.2rem 0.5rem rgba(0, 0, 0, 0.8);
}

/* Menú */

.nav__list {
  margin: 0 auto;
  width: 70%;
  list-style: none;
  justify-content: space-around;
}

.nav__element {
  text-align: center;
  width: 30rem;
  margin: 0 1rem;
}

.nav__link {
  font-size: 1.8rem;
  font-weight: bold;
  color: var(--color-font-main);
  transition: font-size .2s ease-in-out, color .2s ease-in;
}

.controls {
  width: 80%;
  justify-content: space-between;
}

.controls__button {
  font-size: 2rem;
  font-weight: bold;
  width: 10rem;
  padding: 0.3rem 1rem;
  color: var(--color-font-seco);
  background-color: var(--color-tertiary);
  border: none;
  border-radius: 0.5rem;
  box-shadow: 0 0.2rem 0.5rem rgba(0, 0, 0, 0.8);
}

.footer__text {
  font-size: 2rem;
  font-weight: bold;
  color: var(--color-font-seco);
}

/* Transformación CSS */

.trans__left,
.trans__right {
  height: 10rem;
  width: 30rem;
  justify-content: space-between;
  border-radius: 10rem;
  background-color: var(--color-highlight);
  transition: transform 1s ease-in, background-color 1s ease-in;
}

.trans__left {
  margin-left: -20rem;
}

.trans__right {
  margin-right: -20rem;
}

.trans__cont {
  padding: 1rem;
  margin: 0 1.5rem;
  background-color: var(--color-main);
  border-radius: 10rem;
  transition: background-color 1.1s step-end;
}

.text__left,
.text__right {
  font-size: 4rem;
  font-weight: bold;
  color: var(--color-font-main);
  transition: color 1.1s step-end, transform 1.1s ease-in;
}

.text__right {
  margin-right: 8rem;
}

.text__left {
  margin-left: 8rem;
}

.img__left,
.img__right {
  width: 5rem;
  transition: transform 1s ease-in;
}

/* Animación CSS */

.battery__pole,
.battery__body {
  background-color: black;
  border: 0.4rem solid blue;
}

.battery__pole {
  color: white;
  text-align: center;
  width: 4rem;
  height: 2rem;
  margin-left: 2.4rem;
  margin-bottom: -0.5rem;
  border-top-left-radius: 1rem;
  border-top-right-radius: 1rem;

  /*
   * La animación a aplicar es fullcharge, con una duración de 1s. 
   * Se ha elegido la función step-end para que la animación se produzca
   * rápidamente al final. Además se ha incluido in delay de 5s
   */

  animation: fullcharge 1s step-end forwards 5s;
}

.battery__body {
  width: 9rem;
  height: 20rem;
  border-radius: 1rem;
}

.battery__charge {
  align-self: flex-end;
  width: 100%;
  height: 0%;
  background-color: red;
  border-top-left-radius: 0.7rem;
  border-top-right-radius: 0.7rem;

  /*
   * La animación a aplicar es charge, que simulará
   * el efecto de cargado de la pila con una duración de 
   * 6s y usando la función ease-out. Se indica que tras la animación
   * está se quede en el mismo estado del último frame de la animación.
   */

  animation: charge 6s ease-out forwards;
}

.battery__text {
  font-size: 2rem;
  font-weight: bold;
  margin: 2rem 0;
  visibility: hidden;

  /*
   * La animación a aplicar es chargeText que se encargará de 
   * transformar el texto de carga. Se usa la función ease-in y además
   * se aplica un delay de 3s, para que comience en la mitad de la animación
   * de carga.
   */

  animation: chargeText 3s ease-in forwards 3s;
}


/* Pseudo Elementos y Estado de los elementos */

.nav__link:link {
  text-decoration: none;
}

.nav__link:hover {
  color: var(--color-font-seco);
  font-size: 2rem;
}

.controls__button:active {
  transform: scale(0.9);
  box-shadow: none;
}

/* Estado de los elementos y transformaciones */

.trans__left:hover {
  transform: translateX(15rem);
}

.trans__right:hover {
  transform: translateX(-15rem);
}

.trans__right:hover,
.trans__left:hover {
  background-color: var(--color-secondary);
}

.trans__left:hover .text__left,
.trans__right:hover .text__right {
  color: var(--color-font-seco);
  transform: scale(1.2);
}

.trans__left:hover .trans__cont,
.trans__right:hover .trans__cont {
  background-color: var(--color-highlight);
}

.trans__left:hover .trans__cont .img__left,
.trans__right:hover .trans__cont .img__right {
  transform: rotate(360deg);
}

/* Animaciones CSS */

/**
 * Esta animación es bastante simple, solamente hay que cambiar
 * cada 20% de la animación la altura del elemento dentro del cuerpo
 * de la pila y el color que deseamos
 */

@keyframes charge {
  20% {
    height: 15%;
  }

  40% {
    height: 30%;
    background-color: orange;
  }

  600% {
    height: 50%;
    background-color: yellow;
  }

  80% {
    height: 75%;
    background-color: lightgreen;
  }

  100% {
    height: 100%;
    background-color: green;
  }
}

/*
 * Para esta animación solo se incluye el porcentaje
 * 100% en el cual se cambia el color de fondo y el color
 * del signo +
 */

@keyframes fullcharge {
  100% {
    background-color: red;
    color: black;
  }
}

/*
 * En esta transformación en primer lugar se hace visible el texto, para
 * a continuación ir trasladándolo tanto en horizontal como vertical con 
 * la función traslate. Además, se realiza un escalado a 0.5 y posteriormente
 * a 1, es decir a su tamaño original.
 */

@keyframes chargeText {
  0% {
    visibility: visible;
  }

  10% {
    transform: scale(0.5);
  }

  20% {
    transform: translate(10rem);
  }

  40% {
    transform: translate(10rem, 3rem);
  }

  60% {
    transform: translate(-10rem, 3rem);
  }

  80% {
    transform: translate(-10rem, 0);
  }

  100% {
    transform: scale(1);
    transform: translate(0, 0);
    visibility: visible;
  }

}